var express               = require('express');var mongoose = require('mongoose');var passport              = require('passport');var bodyParser            = require('body-parser');var User                  = require('./model/user');var localStrategy         = require('passport-local');var passPortLocalMongoose = require('passport-local-mongoose');// mongoose connectmongoose.connect("mongodb://localhost/auth-demo");var app = express();app.use(bodyParser.urlencoded({extended : true}));app.set('view engine' , 'ejs');app.use(require("express-session")({    secret : "I am the best developer in the entire world",        resave : false,        saveUninitialized : false}));app.use(passport.initialize());app.use(passport.session());passport.use(new localStrategy(User.authenticate()));passport.serializeUser(User.serializeUser());passport.deserializeUser(User.deserializeUser());// =====================// ROUTES//======================app.get('/' , function(req , res){    res.render('home')});app.get("/secret", isLoggedIn , function (req,res) {    res.render('secret')});// registerapp.get("/register" , function (req ,res) {    res.render('register')});app.post('/register' , function (req , res) {    req.body.username    req.body.password    User.register(new User({        username : req.body.username    }),        req.body.password ,        function (err , user) {           if (err) {               console.log(err);               return res.render('register')           }           passport.authenticate('local')(req , res , function () {               res.redirect('/secret')           })        });});// loginapp.get('/login' , function (req , res) {    res.render('login')});app.post('/login', passport.authenticate('local', {    successRedirect: '/secret',    failureRedirect: '/login'    }) , function (req , res) {});//logoutapp.get('/logout' , function (req ,res) {    req.logout();    res.redirect('/login')});//Middlewarefunction isLoggedIn (req , res , next) {    if(req.isAuthenticated()){        return next();    }    res.redirect('login')}// Serverapp.listen(3000 , function(){   console.log("SERVER IS RUNNING ON PORT 3000")});